== 基本概念 ==

    服务是描述业务对象的行为。这个服务既可以是底层数据层面的操作，也可以是粗粒度的业务行为。当一个数据表被初始化为业务对象后，会形成6个基本服务，命名规则是业务对象 + `_` + 后缀，后缀分别为browse、list、insert、update、delete、auto_condition。

    服务按照复杂程度可以分为两类:
       # 基本服务，只定义的一个sql语句。
       # 一般服务，定义了自定义动作或者定义了规则。
       _  一般服务如果定义有sql语句，那么可以“退化”作为基本服务使用。 在配置中跟控制器的选择有关系，控制器的后缀名如果含有uf，那么它既可以执行基本服务也可以执行一般服务，否则只能执行基本服务。_


    服务按照操作类型可以分为：
       # 简单查询 定义的SQL语句只包含针对一个表的查询。
       # 查询  定义的SQL语句完成的是select 操作 查询类的SQL语句，可以是分为两段，第一段是需要完成查询的SQL,第二段是第一段SQL语句取回结果的数量，如
{{{
   select * from demo;select count(*) from demo
}}}
   在一般情况下，都会写作{{{ select * from demo }}}因为在需要结果集数量的场合，系统可以把后面的语句补写完整。但是如果是非常复杂的SQL语句，系统可能无法进行补写，需要写完整的两段。
       # 修改  定义的SQL语句完成的是update 操作
       # 新增  定义的SQL语句完成的是insert 操作
       # 保存  是新增或者是修改
       # 删除  定义的SQL语句完成的是delete 操作
       # 自动条件查询 定义的SQL语句含有通配符/`*`condition`*`/，运行时可以根据用户的输入自动匹配查询条件；如果需要排序通配符为--orderby-- defaultcols desc@#，一个例子：
{{{
        select * from demo /*condition*/ --orderby-- defaultcols desc@#
}}}
       # 自动条件修改 修改的一种特殊形式，update语句必须按照类似系统生成的严格格式编写，执行时系统会自动重新组装sql语句，用户录入的才修改，没有录入的不是置为null，而是不作修改。
       # 自由查询    和自动条件查询的功能类似。可以适用更复杂的情况，一个例子：
{{{
	select *  from v_tbclass where objuid  
	in (select objuid from v_tbclass minus 	(select fdclassid from V_STU_ALRDY_KAOQING WHERE 1=1  	FDCLASSNUM[AND  V_STU_ALRDY_KAOQING.FDCLASSNUM='?'])) 
			and 1=1 and fdhaspersons>0 and fdifpassed=0 FDCLASSNUM[and fdtotaltimes>='?'],
			fdnianfen[AND  fdnianfen='?'],fdxueqiname[AND  fdxueqi='?'],fdgrade[AND  fdgrade='?'],
			fdsubject[AND  fdsubject='?'],fdclasslevel[AND  fdclasslevel='?'],fdarea[AND  fdarea='?'],
			fdxuequ[AND  fdxuequ='?'],fdclassareaname[AND  fdclassareaname='?'],
			fdclassroomid[AND  fdclassroomid='?'],fdteacherid[AND  fdteacherid='?'],
			fdclasstemplateid[AND  fdclasstemplateid='?'],fdstarttime[AND  fdstarttime='?']

}}}
       # 自由保存
       # 脚本  定义一个javascript 脚本，最后一行返回sql。
       # 自定义动作查询  定义一个自定义动作，自定义动作返回一个结果集。 自定义动作查询属于基本服务。 _ 注意在这个自定义动作里面不能直接使用该服务的invokeSelect()方法，否则要引起死循环。 _

	 可见性,包括公开,保护,私有.和面向对象理论可见性一致.
	
        public static final int VISIBILITY_PUBLIC = 1;

	public static final int VISIBILITY_PROTECTED = 2;

	public static final int VISIBILITY_PRIVATE = 3;


        参数检查
	public static final int PARA_CHECK_DETAIL = 2;

	public static final int PARA_CHECK_SIMPLE = 1;

	public static final int PARA_CHECK_FALSE = 0;


        事务
        public static final int TRANSACTION_NO = 0;

	public static final int TRANSACTION_YES = 1;


        日志
	public static final int LOG_NO = 0;

	public static final int LOG_YES = 1;

        记录过滤

	public static final int FILTER_NO = 0;

	public static final int FILTER_YES = 1;

	public static final int FILTER_MULT = 2;

        总线刷新类型


	public static final int REFRESH_NO = 0;// 不刷新数据总线

	public static final int REFESH_CURRENT = 1;// /刷新数据总线，但是只刷新总线键值对

	public static final int REFESH_SEARCH_LIST = 2;// /刷新数据总线，但是总线的数据集

	public static final int REFESH_ALL = 3;// /都刷新

	public static final int REFESH_MAP_DATA_GLOBAL_UID = 10;// /刷新数据总线,和全局值


   

== 对应JAVA 数据类型 ==
    com.exedosoft.plat.bo.DOService

== 配置界面 ==
