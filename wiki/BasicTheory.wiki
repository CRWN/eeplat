#sidebar index
EEPlat的实现不是传统的命令式或产生式编程方式，而是实现了面向信息管理系统领域的配置编程，并且提出了一套针对信息管理系统的元模型体系。
== 声明式编程及DSL ==
    声明式编程是一种自上而下的编程模式，编程的思考重点在于直接描述程序的行为，而不是详细描述程序的行为和实现细节。DSL（领域特定的语言）是一种声明式编程方式，是针对某个特殊领域现场开发出来的特殊语言。EEPlat提供了DSL风格的编程模式，提出了自己的声明式业务领域对象（Declarative Domain Object，下称声明式业务对象）概念。声明式业务对象是可以直接运行的，是对业务模型的映射，拥有属性和服务，与用第三代高级语言的对象概念基本一致。声明式业务对象基本不需要编码，并且平台保障其运行的的稳定和性能的优化。
== 元模型 ==
    # EEPlat元模型是声明式业务对象的模型，是对信息管理系统的合理抽象。在元模型体系下，声明式业务对象是通过元数据（配置数据）进行描述。
    # 声明式业务对象在EEPlat执行引擎的引导下形成用户可用的界面、逻辑等构成的业务系统，本质上执行引擎对EEPlat元数据的解析。
    # 对应于OMG提出的MOF，EEPlat只有三层：
      * 信息层（information layer）：利用EEPlat开发的信息管理系统
      * 模型层（model layer）：声明式业务对象
      * 元模型层（metamodel layer）：EEplat元模型